{"version":3,"sources":["components/login/index.module.scss","servies/firebase.js","components/login/index.jsx","hooks/useChat.js","utils/colorName.js","components/massage/index.jsx","utils/timeMassage.js","components/dashboard/index.jsx","App.js","index.js","components/dashboard/index.module.scss"],"names":["module","exports","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Login","useState","email","setEmail","password","setPassword","error","setError","className","styles","title","form","onSubmit","e","preventDefault","auth","signInWithEmailAndPassword","then","u","console","log","catch","err","toString","htmlFor","value","onChange","target","type","id","aria-describedby","placeholder","style","marginRight","onClick","createUserWithEmailAndPassword","role","useChat","masessages","setMasessages","useEffect","delivery","firestore","collection","onSnapshot","snapshot","docs","map","msg","data","charCode","userMail","split","byfferArr","i","length","push","charCodeAt","result","join","substring","hex_color","r","g","b","rgbaConvert","Massage","sortMasessages","sort","a","time","ul","key","backgroundColor","colorName","user","message","minutes","parseInt","hours","timeMassage","Dashboard","inputMassage","setInputMassage","window","myWrapper","scrollTop","scrollHeight","wrapper","header","fontSize","signOut","body","footer","input","add","Date","now","App","setUser","onAuthStateChanged","ReactDOM","render","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,KAAO,oBAAoB,MAAQ,uB,iLCYtCC,E,OADFC,EAASC,cAVP,CACbC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,8C,iBCoFMC,EAvFD,WAAO,IAAD,EACQC,mBAAS,IADjB,mBACXC,EADW,KACJC,EADI,OAEcF,mBAAS,IAFvB,mBAEXG,EAFW,KAEDC,EAFC,OAGQJ,mBAAS,IAHjB,mBAGXK,EAHW,KAGJC,EAHI,KAyClB,OACE,oCACE,wBAAIC,UAAWC,IAAOC,OAAtB,0BACA,0BAAMF,UAAWC,IAAOE,KAAMC,SArBb,SAACC,GACpBA,EAAEC,iBAEFP,EAAS,IAETjB,EACGyB,OACAC,2BAA2Bd,EAAOE,GAClCa,MAAK,SAACC,GACLC,QAAQC,IAAI,6BAEbC,OAAM,SAACC,GACNH,QAAQC,IAAI,UAAYE,EAAIC,YAC5BhB,EAASe,EAAIC,iBASb,yBAAKf,UAAU,cACb,2BAAOgB,QAAQ,cAAf,iBACA,2BACEC,MAAOvB,EACPwB,SAAU,SAACb,GAAD,OAAOV,EAASU,EAAEc,OAAOF,QACnCG,KAAK,QACLpB,UAAU,eACVqB,GAAG,aACHC,mBAAiB,YACjBC,YAAY,iBAGhB,yBAAKvB,UAAU,cACb,2BAAOgB,QAAQ,iBAAf,YACA,2BACEC,MAAOrB,EACPsB,SAAU,SAACb,GAAD,OAAOR,EAAYQ,EAAEc,OAAOF,QACtCG,KAAK,WACLpB,UAAU,eACVqB,GAAG,gBACHE,YAAY,cAIhB,4BAAQvB,UAAU,kBAAkBwB,MAAO,CAAEC,YAAa,KAA1D,WAIA,4BAAQC,QAnEQ,SAACrB,GACrBA,EAAEC,iBAEFP,EAAS,IAETjB,EACGyB,OACAoB,+BAA+BjC,EAAOE,GACtCa,MAAK,SAACC,GACLC,QAAQC,IAAI,6BAEbC,OAAM,SAACC,GACNH,QAAQC,IAAI,UAAYE,EAAIC,YAC5BhB,EAASe,EAAIC,gBAsDmBf,UAAU,gBAA1C,gBAGA,6BACCF,EACC,yBAAKE,UAAU,sBAAsB4B,KAAK,SACvC9B,GAED,Q,wBCvDG+B,EA3BC,WAAO,IAAD,EACMpC,mBAAS,MADf,mBACbK,EADa,KACNC,EADM,OAEgBN,mBAAS,IAFzB,mBAEbqC,EAFa,KAEDC,EAFC,KAwBpB,OAlBAC,qBAAU,WACR,IAAMC,EAAWnD,EACdoD,YACAC,WAAW,YACXC,YACC,SAACC,GACCN,EACEM,EAASC,KAAKC,KAAI,SAACC,GAAD,oBAAYnB,GAAImB,EAAInB,IAAOmB,EAAIC,eAGrD,SAAC3C,GACCC,EAASD,MAIf,OAAO,kBAAMmC,OACZ,CAACF,IAEG,CAAEjC,QAAOgC,e,iBC5BH,SAASY,EAASC,GAM/B,IAJA,IAAIjD,EAAQiD,EAASC,MAAM,KAAK,GAC5BC,EAAY,GAGPC,EAAI,EAAGA,EAAIpD,EAAMqD,OAAQD,IAChCD,EAAUG,KAAKtD,EAAMuD,WAAWH,IAGlC,IAAII,EAASL,EAAUM,KAAK,IAsB5B,OApBID,EAAOH,QAAU,IACnBG,GAAkB,WAGhBA,EAAOH,OAAS,IAClBG,EAASA,EAAOE,UAAU,EAAG,IAI/B,SAAqBC,GACnB,IAAIC,EAAID,GAAa,GACjBE,GAAiB,MAAZF,IAAuB,EAC5BG,EAAgB,IAAZH,EAKR,OAHAE,EAAS,IAAJA,EAAW,IAChBC,EAAS,IAAJA,EAAW,IAEV,QAAN,OAJAF,EAAS,IAAJA,EAAW,IAIhB,YAAoBC,EAApB,YAAyBC,EAAzB,SAGKC,CAAYP,GC1BrB,IA0BeQ,EA1BC,SAAC,GAAoB,IAE7BC,EAF4B,EAAjB7B,WAEiB8B,MAAK,SAACC,EAAGL,GACzC,OAAIK,EAAEC,KAAON,EAAEM,KAAa,EACnBD,EAAEC,KAAON,EAAEM,MAAc,EACtB,KAId,OACE,oCACE,wBAAI9D,UAAWC,IAAO8D,IACnBJ,EAAepB,KAAI,SAACC,GAAD,OAClB,wBACEwB,IAAKxB,EAAInB,GACTG,MAAO,CAAEyC,gBAAgB,GAAD,OAAKC,EAAU1B,EAAI2B,SAE3C,8BAAO3B,EAAI2B,MAJb,IAI0B,2BAAI3B,EAAI4B,SAChC,+BCxBG,SAAqBN,GAClC,IAAIO,EAAUC,SAAUR,EAAI,IAAkB,IAC1CS,EAAQD,SAAUR,EAAI,KAAuB,IAMjD,OAFAS,EAAQA,EAAQ,GAAK,IAAMA,EAAQA,GAFzB,EAIW,KADrBF,EAAUA,EAAU,GAAK,IAAMA,EAAUA,GDiBvBG,CAAYhC,EAAIsB,cEiDrBW,EAnEG,SAAC,GAAc,IAAZN,EAAW,EAAXA,KAAW,EACU1E,mBAAS,IADnB,mBACvBiF,EADuB,KACTC,EADS,OAEA9C,IAAtB/B,EAFsB,EAEtBA,MAAOgC,EAFe,EAEfA,WAsBf,OALAE,qBAAU,WACR4C,OAAOC,UAAUC,UAAYF,OAAOC,UAAUE,gBAK9C,oCACGjF,EACC,sJAEA,yBAAKE,UAAWC,IAAO+E,SACrB,yBAAKhF,UAAWC,IAAOgF,QACrB,uCACW,+BAAKd,EAAKzE,OAAW,KAEhC,4BACE8B,MAAO,CAAE0D,SAAU,IACnBlF,UAAU,iBACV0B,QAhCS,WACnB5C,EAAKyB,OAAO4E,YA4BJ,WAQF,yBAAKnF,UAAWC,IAAOmF,KAAM/D,GAAG,aAC9B,kBAAC,EAAD,CAASS,WAAYA,KAEvB,yBAAK9B,UAAWC,IAAOoF,QACrB,2BACEjE,KAAK,OACLH,MAAOyD,EACPxD,SAAU,SAACb,GAAD,OAAOsE,EAAgBtE,EAAEc,OAAOF,QAC1CjB,UAAWC,IAAOqF,MAAQ,gBAC1B/D,YAAY,kBAEd,4BACEG,QA5CS,SAACrB,GACpBA,EAAEC,iBACFxB,EAAKoD,YAAYC,WAAW,YAAYoD,IAAI,CAC1CzB,KAAM0B,KAAKC,MACXrB,QAASM,EACTP,KAAMA,EAAKzE,SAwCHM,UAAU,kBACVwB,MAAO,CAAEC,YAAa,KAHxB,eClCGiE,EApBH,WAAO,IAAD,EACQjG,mBAAS,MADjB,mBACT0E,EADS,KACHwB,EADG,KAehB,OAVA3D,qBAAU,WACRlD,EAAKyB,OAAOqF,oBAAmB,SAACzB,GAE5BwB,EADExB,GAGM,YAMZ,yBAAKnE,UAAU,OAAOmE,EAAO,kBAAC,EAAD,CAAWA,KAAMA,IAAW,kBAAC,EAAD,QCjB7D0B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCJjDpH,EAAOC,QAAU,CAAC,QAAU,2BAA2B,OAAS,0BAA0B,KAAO,wBAAwB,OAAS,0BAA0B,MAAQ,4B","file":"static/js/main.c54b1eed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"login_form__1k2QK\",\"title\":\"login_title__2DMmA\"};","import firebase from \"firebase\";\n//тсндартный импорт firebase, не делал через .env\nconst config = {\n  apiKey: \"AIzaSyBy-CDArcmrUVXl8QhPJhtI48MKBEJbwTE\",\n  authDomain: \"chat-app-c9922.firebaseapp.com\",\n  databaseURL: \"https://chat-app-c9922.firebaseio.com\",\n  projectId: \"chat-app-c9922\",\n  storageBucket: \"chat-app-c9922.appspot.com\",\n  messagingSenderId: \"391063422709\",\n  appId: \"1:391063422709:web:9be5cf51980a187f46a7bc\",\n};\n\nconst fire = firebase.initializeApp(config);\nexport default fire;\n","import React, { useState } from \"react\";\n//БД\nimport fire from \"../../servies/firebase\";\n//CSS\nimport styles from \"./index.module.scss\";\n\nconst Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  // ф-я для регистрации, проверка на строне fb\n  const handlerSignUp = (e) => {\n    e.preventDefault();\n    // скидываем стейт ошибки\n    setError(\"\");\n    // подключаем fb и регистрируем по документации, в случаи ошибки - отображаем её\n    fire\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then((u) => {\n        console.log(\"Successfully Signed Up\");\n      })\n      .catch((err) => {\n        console.log(\"Error: \" + err.toString());\n        setError(err.toString());\n      });\n  };\n  // ф-я для входа, проверка на строне fb\n  const handlerLogin = (e) => {\n    e.preventDefault();\n    // скидываем стейт ошибки\n    setError(\"\");\n    // подключаем fb и пытаемся войти, в случаи ошибки - отображаем её\n    fire\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((u) => {\n        console.log(\"Successfully Logged In\");\n      })\n      .catch((err) => {\n        console.log(\"Error: \" + err.toString());\n        setError(err.toString());\n      });\n  };\n\n  // отправка формы = ф-ия входа, на конпку регистрации повесил клик.  если есть ошибка входа/рег-ии - отображаем\n  return (\n    <>\n      <h3 className={styles.title}>Sign in / Registration</h3>\n      <form className={styles.form} onSubmit={handlerLogin}>\n        <div className=\"form-group\">\n          <label htmlFor=\"inputEmail\">Email address</label>\n          <input\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            type=\"email\"\n            className=\"form-control\"\n            id=\"inputEmail\"\n            aria-describedby=\"emailHelp\"\n            placeholder=\"Enter email\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"inputPassword\">Password</label>\n          <input\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            type=\"password\"\n            className=\"form-control\"\n            id=\"inputPassword\"\n            placeholder=\"Password\"\n          />\n        </div>\n\n        <button className=\"btn btn-primary\" style={{ marginRight: 20 }}>\n          Sign in\n        </button>\n\n        <button onClick={handlerSignUp} className=\"btn btn-info\">\n          Registration\n        </button>\n        <hr />\n        {error ? (\n          <div className=\"alert alert-warning\" role=\"alert\">\n            {error}\n          </div>\n        ) : null}\n      </form>\n    </>\n  );\n};\n\nexport default Login;\n","import { useEffect, useState } from \"react\";\r\n\r\n//подключаем fb\r\nimport fire from \"../servies/firebase\";\r\n\r\nconst useChat = () => {\r\n  const [error, setError] = useState(null);\r\n  const [masessages, setMasessages] = useState([]);\r\n\r\n  //отслеживаем изменения в сообщениях, обновляем стейт при добавлении нового.\r\n  //получаем сообщения по id, при ошибке - сообщаем\r\n  useEffect(() => {\r\n    const delivery = fire\r\n      .firestore()\r\n      .collection(\"messages\")\r\n      .onSnapshot(\r\n        (snapshot) => {\r\n          setMasessages(\r\n            snapshot.docs.map((msg) => ({ id: msg.id, ...msg.data() }))\r\n          );\r\n        },\r\n        (error) => {\r\n          setError(error);\r\n        }\r\n      );\r\n\r\n    return () => delivery();\r\n  }, [setMasessages]);\r\n\r\n  return { error, masessages };\r\n};\r\n\r\nexport default useChat;\r\n","//фу-я конверта логина в rgba\r\nexport default function charCode(userMail) {\r\n  //убираем все до @\r\n  let email = userMail.split(\"@\")[0];\r\n  let byfferArr = [];\r\n\r\n  //перебор строки преобразуем в чар\r\n  for (let i = 0; i < email.length; i++) {\r\n    byfferArr.push(email.charCodeAt(i));\r\n  }\r\n\r\n  let result = byfferArr.join(\"\");\r\n  //если ник меньше 3 символов добавляем черный\r\n  if (result.length <= 2) {\r\n    result = result + \"0000000\";\r\n  }\r\n\r\n  if (result.length > 6) {\r\n    result = result.substring(0, 6);\r\n  }\r\n\r\n  //конверт чаров в цвет rga\r\n  function rgbaConvert(hex_color) {\r\n    let r = hex_color >> 16;\r\n    let g = (hex_color & 0xff00) >> 8;\r\n    let b = hex_color & 0xff;\r\n    r = (r * 100) / 256;\r\n    g = (g * 100) / 256;\r\n    b = (b * 100) / 256;\r\n\r\n    return `rgba(${r},${g},${b},0.3)`;\r\n  }\r\n\r\n  return rgbaConvert(result);\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./index.module.scss\";\r\n//ф-ия преобразующее ник в char, а из него в rgba\r\nimport colorName from \"../../utils/colorName\";\r\n// ф-ия перевода милисекунд во время\r\nimport timeMassage from \"../../utils/timeMassage\";\r\n\r\nconst Massage = ({ masessages }) => {\r\n  //сортировка сообщений по времени\r\n  const sortMasessages = masessages.sort((a, b) => {\r\n    if (a.time > b.time) return 1;\r\n    else if (a.time < b.time) return -1;\r\n    else return 0;\r\n  });\r\n\r\n  // распаковка сообщений, цвет сообщений по нику пользователя\r\n  return (\r\n    <>\r\n      <ul className={styles.ul}>\r\n        {sortMasessages.map((msg) => (\r\n          <li\r\n            key={msg.id}\r\n            style={{ backgroundColor: `${colorName(msg.user)}` }}\r\n          >\r\n            <span>{msg.user}</span>:<p>{msg.message}</p>\r\n            <small>{timeMassage(msg.time)}</small>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Massage;\r\n","//перевод милисекнды в часы/ минуты\r\nexport default function timeMassage(time) {\r\n  let minutes = parseInt((time / (1000 * 60)) % 60);\r\n  let hours = parseInt((time / (1000 * 60 * 60)) % 24);\r\n  //UTC+3\r\n  let UTC = 3;\r\n\r\n  hours = hours < 10 ? \"0\" + hours : hours;\r\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n  return hours + UTC + \":\" + minutes;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport fire from \"../../servies/firebase\";\nimport styles from \"./index.module.scss\";\n\nimport useChat from \"../../hooks/useChat\";\nimport Massage from \"../massage\";\n\nconst Dashboard = ({ user }) => {\n  const [inputMassage, setInputMassage] = useState(\"\");\n  const { error, masessages } = useChat();\n\n  // выход пользователя\n  const handleLogout = () => {\n    fire.auth().signOut();\n  };\n\n  // отправка сообщения в коллекцию сообщений ( пользователь, сообщение, и дата)\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fire.firestore().collection(\"messages\").add({\n      time: Date.now(),\n      message: inputMassage,\n      user: user.email,\n    });\n  };\n  // обращение по id и прокрутка чата до самом начала\n  useEffect(() => {\n    window.myWrapper.scrollTop = window.myWrapper.scrollHeight;\n  });\n\n  // проверяем не выда ли бд ошибку. отображаем контент\n  return (\n    <>\n      {error ? (\n        \"Ошибка загрузки базы данных\"\n      ) : (\n        <div className={styles.wrapper}>\n          <div className={styles.header}>\n            <p>\n              Welcome, <b> {user.email}</b>{\" \"}\n            </p>\n            <button\n              style={{ fontSize: 12 }}\n              className=\"btn btn-danger\"\n              onClick={handleLogout}\n            >\n              logout\n            </button>\n          </div>\n          <div className={styles.body} id=\"myWrapper\">\n            <Massage masessages={masessages} />\n          </div>\n          <div className={styles.footer}>\n            <input\n              type=\"text\"\n              value={inputMassage}\n              onChange={(e) => setInputMassage(e.target.value)}\n              className={styles.input + \" form-control\"}\n              placeholder=\"Enter message\"\n            />\n            <button\n              onClick={handleSubmit}\n              className=\"btn btn-primary\"\n              style={{ marginRight: 20 }}\n            >\n              Sign in\n            </button>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Dashboard;\n","import React, { useState, useEffect } from \"react\";\n\nimport fire from \"./servies/firebase\";\nimport Login from \"./components/login\";\nimport Dashboard from \"./components/dashboard\";\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n\n  // проверяем аунтентификацию в firebase\n  // отображаем стрницу dashboard или перекидываем на регистрацию / вход\n  useEffect(() => {\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser(null);\n      }\n    });\n  });\n\n  return (\n    <div className=\"App\">{user ? <Dashboard user={user} /> : <Login />}</div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"dashboard_wrapper__1AG7_\",\"header\":\"dashboard_header__1fwJm\",\"body\":\"dashboard_body__3PDvO\",\"footer\":\"dashboard_footer__36ypw\",\"input\":\"dashboard_input__3sIX2\"};"],"sourceRoot":""}